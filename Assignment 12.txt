Assignment - 12 A Job Ready Bootcamp in C++, DSA and IOT MySirG

Recursion in C Language
1. Write a recursive function to print first N natural numbers
Ans.  #include<stdio.h>  
  
void display(int);  
  
int main()  
{  
    int limit;  
  
    printf("Enter the number of terms to be printed\n");  
    scanf("%d", &limit);  
  
    printf("\nNatural Numbers from 1 To %d are:", limit);  
    display(limit);  
  
    return 0;  
}  
  
void display(int num)  
{  
    if(num)  
        display(num-1);  
    else  
        return;  
  
    printf("\n%d\n", num);  
}  
Output:
Enter the number of terms to be printed
14

Natural Numbers from 1 To 14 are:
1

2

3

4

5


6


7

8

9


10

11

12

13

14
2. Write a recursive function to print first N natural numbers in reverse order
Ans .  #include<stdio.h>  
   
void display(int);  
   
int main()  
{  
    int limit;  
   
    printf("Please Enter any Integer Value  : ");
    scanf("%d", &limit);  
   
    printf("\nNatural Numbers from 1 To %d are:", limit);  
    display(limit);  
   
    return 0;  
}  
   
void display(int num)  
{  
    if(num <= 0)  
        return; 
    else  
      printf(" %d ", num);  
      display(num-1); 
   
 
}  

The output of the above c program; as follows:

Please Enter any Integer Value  : 10
Natural Numbers from 1 To 10 are: 10  9  8  7  6  5  4  3  2  1 
3. Write a recursive function to print first N odd natural numbers
Ans.  #include <stdio.h>


/* Function declaration */
void printOdd(int cur, int limit);



int main()
{
    int lowerLimit, upperLimit;
    
    // Input lower and upper limit from user
    printf("Enter lower limit: ");
    scanf("%d", &lowerLimit);
    printf("Enter upper limit: ");
    scanf("%d", &upperLimit);
    
    printf("Even/odd Numbers from %d to %d are: ", lowerLimit, upperLimit);
    printEvenOdd(lowerLimit, upperLimit); 
    
    return 0;
}


/**
 * Recursive function to print even or odd numbers in a given range. 
 */
void printOdd(int cur, int limit)
{
    if(cur > limit)
        return;
    
    printf("%d, ", cur);
    
    // Recursively call to printEvenOdd to get next value
    printOdd(cur + 2, limit);
}
OUTPUT:
Enter lower limit: 1
Enter upper limit: 100
odd Numbers from 1 to 100 are: 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99,

5. Write a recursive function to print first N even natural numbers
#include<stdio.h>
int even(int num1, int num2)
{
   if(num1>num2)
    return;
    printf("%d ",num1);
return even(num1+2,num2);
}
int main()
{
    int num1=2,num2;
    printf("Enter your Limit:");
    scanf("%d",&num2);
    printf("All Even number given range are:");
    even(num1,num2);
}
Output:
Enter your Limit:15
All Even number given range are:2 4 6 8 10 12 14

7. Write a recursive function to print squares of first N natural numbers
Ans #include<stdio.h>
 
void printSquares(int n)
{
    // Initialize 'square' and previous value of 'x'
    int square = 0, prev_x = 0;
 
    // Calculate and print squares
    for (int x = 0; x < n; x++)
    {
        // Update value of square using previous value
        square = (square + x + prev_x);
 
        // Print square and update prev for next iteration
        printf("%d" ,square);
        prev_x = x;
    }
}
 
// Driver program to test above function
int main()
{
   int n = 5;
   printSquares(n);
}
Output:
0 1 4 9 16

8. Write a recursive function to print binary of a given decimal number
Ans.  #include <stdio.h>
 
// Decimal to binary conversion
// using recursion
int find(int decimal_number)
{
    if (decimal_number == 0)
        return 0;
    else
        return (decimal_number % 2 + 10 *
                find(decimal_number / 2));
}
 
// Driver code
int main()
{
    int decimal_number = 10;
    printf("%d", find(decimal_number));
    return 0;

Output:
1010
}
9. Write a recursive function to print octal of a given decimal number
Ans.  #include <stdio.h>
 
void conversionFunc(int); //prototype
 
int main()
{
  int deciNum;
 
  printf("Enter a Decimal number: ");
  scanf("%d", &deciNum);
 
  printf("Equivalent Octal Value: ");
  conversionFunc(deciNum);
 
  return 0;
}
 
//recursive function
void conversionFunc(int dec)
{
  if (dec > 0)
  {
    conversionFunc(dec / 8);
    printf("%d", dec % 8);
  }
}
Output:


10. Write a recursive function to print reverse of a given number#include <stdio.h>
int sum=0,rem;
int reverse_function(int num){
  if(num){
    rem=num%10;
    sum=sum*10+rem;
    reverse_function(num/10);
  }
  else
    return sum;
  return sum;
}
int main(){
  int num,reverse_number;

  //Take the number as an input from user
  printf("Enter any number:");
  scanf("%d",&num);

  //Calling user defined function to perform reverse
  reverse_number=reverse_function(num);
  printf("The reverse of entered number is :%d",reverse_number);
  return 0;
}
Output:Enter any number:5689
The reverse of entered number is:9865