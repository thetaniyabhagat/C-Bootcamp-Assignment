Assignment - 11                                A Job Ready Bootcamp in C++, DSA and IOT

Functions in C Language
1. Write a function to calculate LCM of two numbers. 
Ans. #include <stdio.h>  
#include <conio.h>  
  
int get_lcm( int a, int b); // function declaration   
  
int main()  
{  
    int n1, n2, lcm; // declaration of variables  
    printf (" \n Enter any two positive numbers to get the LCM of: \n ");  
    scanf ("%d %d", &n1, &n2);  
    lcm = get_lcm( n1, n2); // function calling  
    printf ( " \n LCM of %d and %d is %d. ", n1, n2, lcm);  
    return 0;  
}  
  
int get_lcm ( int n1, int n2) // function definition   
{  
    /* static variabe is iniatialized only once for each function call */     
    static int max = 1;  
    if ( max % n1  == 0 && max % n2 == 0)  
    {  
        return max;  
    }  
    else  
    {  
        max++;  
        get_lcm( n1, n2);  
        return max;  
    }  
}  
Output:
Enter any two positive numbers to get the LCM of:
30
25
LCM of 30 and 25 is 150.
2. Write a function to calculate HCF of two numbers.
#include <math.h>
#include <stdio.h>
 
// Function to return gcd of a and b
int gcd(int a, int b)
{
    int result = fmin(a, b); // Finding minimum of a nd b
    while (result > 0) {
        if (a % result == 0 && b % result == 0) {
            break;
        }
        result--;
    }
    return result; // return gcd of a nd b
}
 
// Driver program to test above function
int main()
{
    int a = 98, b = 56;
    printf("GCD of %d and %d is %d ", a, b, gcd(a, b));
    return 0;
}
3. Write a function to check whether a given number is Prime or not. 
Ans.   #include <stdio.h>
#include <conio.h>
void main()
{
	int num,res=0;
	clrscr();
	printf("\nENTER A NUMBER: ");
	scanf("%d",&num);
	res=prime(num);
	if(res==0)
		printf("\n%d IS A PRIME NUMBER",num);
	else
		printf("\n%d IS NOT A PRIME NUMBER",num);
	getch();
}
int prime(int n)
{
	int i;
	for(i=2;i<=n/2;i++)
	{
		if(n%i!=0)
			continue;
		else
			return 1;
	}
	return 0;
}
OUTPUT:
ENTER A NUMBER : 7
7 IS A PRIME NUMBER
4. Write a function to find the next prime number of a given number. 
ans. #include<stdio.h>
bool isPrime(int n)
{
    // Corner cases
    if (n <= 1)  return false;
    if (n <= 3)  return true;
   
    // This is checked so that we can skip 
    // middle five numbers in below loop
    if (n%2 == 0 || n%3 == 0) return false;
   
    for (int i=5; i*i<=n; i=i+6)
        if (n%i == 0 || n%(i+2) == 0)
           return false;
   
    return true;
}
 
// Function to return the smallest
// prime number greater than N
int nextPrime(int N)
{
 
    // Base case
    if (N <= 1)
        return 2;
 
    int prime = N;
    bool found = false;
 
    // Loop continuously until isPrime returns
    // true for a number greater than n
    while (!found) {
        prime++;
 
        if (isPrime(prime))
            found = true;
    }
 
    return prime;
}
 
// Driver code
int main()
{
    int N = 3;
 
    printf("%d",nextPrime(N));
 
    return 0;
}
OUTPUT:
5
5. Write a function to print first N prime numbers 
Ans. 
// C program to display Prime numbers till N
#include <stdbool.h>
#include <stdio.h>
 
// function to check if a given number is prime
bool isPrime(int n)
{
    // since 0 and 1 is not prime return false.
    if (n == 1 || n == 0)
        return false;
 
    // Run a loop from 2 to n-1
    for (int i = 2; i < n; i++) {
        // if the number is divisible by i, then n is not a
        // prime number.
        if (n % i == 0)
            return false;
    }
    // otherwise, n is prime number.
    return true;
}
 
// Driver code
int main()
{
    int N = 100;
 
    // check for every number from 1 to N
    for (int i = 1; i <= N; i++) {
        // check if current number is prime
        if (isPrime(i))
            printf("%d ", i);
    }
 
    return 0;
}
OUTPUT:
2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97

6. Write a function to print all Prime numbers between two given numbers. 
Ans.  #include <stdio.h>
 
int main()
{
    // Declare the variables
    int a, b, i, j, flag;
 
    // Ask user to enter lower value of interval
    printf("Enter lower bound of the interval: ");
    scanf("%d", &a); // Take input
 
    // Ask user to enter upper value of interval
    printf("\nEnter upper bound of the interval: ");
    scanf("%d", &b); // Take input
 
    // Print display message
    printf("\nPrime numbers between %d and %d are: ", a, b);
 
    // Traverse each number in the interval
    // with the help of for loop
    for (i = a; i <= b; i++) {
        // Skip 0 and 1 as they are
        // neither prime nor composite
        if (i == 1 || i == 0)
            continue;
 
        // flag variable to tell
        // if i is prime or not
        flag = 1;
 
        for (j = 2; j <= i / 2; ++j) {
            if (i % j == 0) {
                flag = 0;
                break;
            }
        }
 
        // flag = 1 means i is prime
        // and flag = 0 means i is not prime
        if (flag == 1)
            printf("%d ", i);
    }
 
    return 0;
OUTPUT:

Enter lower bound of the interval: 1
Enter upper bound of the interval: 10
Prime numbers between 1 and 10 are: 2 3 5 7 


7. Write a function to print first N terms of Fibonacci series 
ANS.  #include <iostream>
using namespace std;
 
int fibonacci_numbers(int n)
{
    if(n == 0){
        return 0;
    }
    else if(n == 1){
        return 1;
    }
    else{
        return fibonacci_numbers(n-2) + fibonacci_numbers(n-1);
    }
}
 
int main() {
    int n = 7;
      for(int i = 0; i < n; i++)
    {
        cout << fibonacci_numbers(i) << " ";
    }
    return 0;
OUTPUT:
0 1 1 2 3 5 8 


8. Write a function to print PASCAL Triangle.
ANS.  #include <stdio.h>
  
// See https://www.geeksforgeeks.org/space-and-time-efficient-binomial-coefficient/ 
// for details of this function
int binomialCoeff(int n, int k);
  
// Function to print first
// n lines of Pascal's 
// Triangle
void printPascal(int n)
{
    // Iterate through every line and
    // print entries in it
    for (int line = 0; line < n; line++)
    {
        // Every line has number of 
        // integers equal to line 
        // number
        for (int i = 0; i <= line; i++)
            printf("%d ",
                    binomialCoeff(line, i));
        printf("\n");
    }
}
  
// See https://www.geeksforgeeks.org/space-and-time-efficient-binomial-coefficient/
// for details of this function
int binomialCoeff(int n, int k)
{
    int res = 1;
    if (k > n - k)
    k = n - k;
    for (int i = 0; i < k; ++i)
    {
        res *= (n - i);
        res /= (i + 1);
    }
      
    return res;
}
  
// Driver program 
int main()
{
    int n = 7;
    printPascal(n);
    return 0;
}
Output:
1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1 
1 5 10 10 5 1 
1 6 15 20 15 6 1
9. Write a program in C to find the square of any number using the function.
Ans.  #include<stdio.h>
float squareOfNumber(float num)
{
    return (num*num);
}
int main()
{
    float number, square;
    printf("Please Enter any integer Value : ");
    scanf("%f", &number);
    square = squareOfNumber(number);
    printf("square of a given number %.2f is  =  %.2f", number, square);
    return 0;

Output:
Please Enter any integer Value : 4.5
square of a given number 4.50 is = 20.25

10. Write a program in C to find the sum of the series 1! /1+2!/2+3!/3+4!/4+5!/5 using the
function.
Ans.  #include <stdio.h>
 
double sumseries(double);
 
main()
{
    double number,sum;
    printf("\n Enter the value:  ");
    scanf("%lf", &number);
    sum = sumseries(number);
    printf("\n Sum of the above series = %lf ", sum);
}
 
double sumseries(double m)
{
    double sum2 = 0, f = 1, i;
    for (i = 1; i <= m; i++)
    {
        f = f * i;
        sum2 = sum2 +(i / f);
    }
    return(sum2);
}
